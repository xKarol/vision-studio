---

---

<div
  id="cursor-container"
  style={{ opacity: 0 }}
  class={"fixed top-0 left-0 h-screen w-full z-50 pointer-events-none overflow-hidden hidden md:block mix-blend-difference"}
>
  <div id="cursor-wrapper">
    <div
      id="cursor"
      class="absolute flex size-10 origin-center -translate-x-1/2 -translate-y-1/2 items-center justify-center rounded-full border border-white text-center text-[0.625rem] uppercase opacity-40 transition-transform duration-500"
    >
    </div>
  </div>
</div>
<style>
  #cursor-container[data-state="drag"] {
    mix-blend-mode: normal !important;
  }
  #cursor-container[data-state="drag"] #cursor {
    width: 4.375rem;
    height: 4.375rem;
    background-color: white;
    color: black;
    border-color: white;
    opacity: 1;
    transform: translate(-35px, -35px) scale(1.5);
  }

  #cursor-container[data-state="link"] #cursor {
    background-color: white;
    opacity: 1;
    transform: translate(-20px, -20px) scale(0.25);
  }
</style>

<script>
  import gsap from "gsap";

  const cursorContainerElement =
    document.querySelector<HTMLDivElement>("#cursor-container")!;
  const cursorElement = document.querySelector<HTMLDivElement>("#cursor")!;
  let isGrab = false;
  // let isPointer = false;
  let hasMoved = false;

  const onMouseMove = ({ clientX, clientY }: MouseEvent) => {
    gsap.to("#cursor-wrapper", {
      x: clientX,
      y: clientY,
      duration: hasMoved ? 0.6 : 0,
      ease: "expo.out",
    });
    hasMoved = true;
    cursorContainerElement.style.opacity = hasMoved ? "1" : "0";
  };

  window.addEventListener("mousemove", onMouseMove, false);

  const onPointerMouseEnter = () => {
    if (isGrab) return;
    // isPointer = true;
    cursorContainerElement.setAttribute("data-state", "link");
  };
  const onPointerMouseLeave = () => {
    if (isGrab) return;
    // isPointer = false;
    cursorContainerElement.removeAttribute("data-state");
  };

  const pointerElements = [
    ...document.querySelectorAll("button,a,[data-cursor='pointer']"),
  ];

  pointerElements.forEach((element) => {
    element.addEventListener("mouseenter", onPointerMouseEnter, false);
    element.addEventListener("mouseleave", onPointerMouseLeave, false);
  });

  const grabElements = [...document.querySelectorAll(".embla__viewport")];

  const onGrabMouseEnter = () => {
    isGrab = true;
    cursorElement.innerText = "Drag";
    cursorContainerElement.setAttribute("data-state", "drag");
  };
  const onGrabMouseLeave = () => {
    isGrab = false;
    cursorElement.innerText = "";
    cursorContainerElement.removeAttribute("data-state");
  };

  grabElements.forEach((element) => {
    element.addEventListener("mouseenter", onGrabMouseEnter, false);
    element.addEventListener("mouseleave", onGrabMouseLeave, false);
  });
</script>
