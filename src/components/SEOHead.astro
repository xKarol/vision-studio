---
import { SEO as SEOComponent, type SEOProps as _SEOProps } from "astro-seo";
import { defaultSEOConfig } from "~/config/seo-config";
import { merge } from "ts-deepmerge";
import type { PartialDeep } from "type-fest";

export interface SEOProps extends PartialDeep<_SEOProps> {}

interface Props {
  seo?: SEOProps;
}

const { seo = {} } = Astro.props;

const getTitle = () => {
  if (seo.title) {
    return (
      defaultSEOConfig.titleTemplate?.replace("%s", seo.title) ||
      defaultSEOConfig.titleDefault
    );
  }
  return defaultSEOConfig.title;
};

const seoConfig = merge(
  merge(defaultSEOConfig, {
    openGraph: {
      basic: { title: getTitle() },
      optional: {
        ...(seo.description && { description: seo.description }),
      },
    },
    twitter: {
      title: getTitle(),
      ...(seo.description && { description: seo.description }),
    },
  }),
  seo,
);
---

<Fragment>
  <!-- @ts-expect-error type is checked in ~/config/seo-config.ts file -->
  <SEOComponent {...seoConfig} />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  <link rel="sitemap" href="/sitemap-index.xml" />
</Fragment>
