---
import { parseHTML } from "linkedom";

const html = await Astro.slots.render("default");
const { document } = parseHTML(html);

const elements = [...document.children];

const gridCol = {
  1: "1 / 7",
  2: "8 / 11",
  3: "7 / 10",
  4: "2 / 7",
  5: "7 / 9",
};

const gridRows = (i: number, index: number) => {
  const rowsHeightStart = {
    1: 1,
    2: 1,
    3: 6,
    4: 9,
    5: 12,
  };
  const rowsHeightEnd = {
    1: 6,
    2: 3,
    3: 3,
    4: 4,
    5: 2,
  };
  // @ts-ignore
  if (i <= 4) return `${rowsHeightStart[index]} / span ${rowsHeightEnd[index]}`;
  const round = Math.floor(i / 5);
  const rowHeightArray = Object.values(rowsHeightStart);
  const allRowsHeight = rowHeightArray[rowHeightArray.length - 1];

  let elementRow = 1; //1 row gap
  for (let i = 0; i < round; i++) {
    // @ts-ignore
    elementRow += allRowsHeight + rowsHeightStart[index];
  }
  console.log(index, elementRow);

  // @ts-ignore
  return `${elementRow} / span ${rowsHeightEnd[index]}`;
};
---

<ul
  class="grid h-full min-h-screen grid-cols-[repeat(10,1fr)] gap-4"
  style={{ gridAutoRows: "11vw" }}
>
  {
    elements.map((image, i) => {
      const index = (i % 5) + 1;

      return (
        <li
          style={{
            // @ts-expect-error TODO FIX
            gridColumn: gridCol[index],
            gridRow: gridRows(i, index),
          }}
        >
          <Fragment set:html={image} />
        </li>
      );
    })
  }
</ul>
