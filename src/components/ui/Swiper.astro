---
import type { HTMLAttributes } from "astro/types";
import { parseHTML } from "linkedom";

interface Props extends HTMLAttributes<"div"> {}

const { class: className, ...rest } = Astro.props;

const html = await Astro.slots.render("default");
const { document } = parseHTML(html);

const slides = [...document.children].map((el) => {
  el.classList.add("embla__slide");
  return el;
});
---

<section class="embla" class:list={[className]} {...rest}>
  <div class="embla__viewport">
    <div class="embla__container">
      {
        slides.map((slide) => (
          <div class="embla__slide">
            <Fragment set:html={slide} />
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  .embla {
    width: 100%;
    margin: auto;
    --slide-height: 19rem;
    --slide-spacing: 1rem;
    --slide-size: calc(100% / 2.5);
    --slide-size-md: calc(100% / 2.5);
    --slide-size-lg: calc(100% / 3.5);
    --slide-size-2xl: calc(100% / 5.5);
  }

  .embla__viewport {
    overflow: hidden;
  }
  .embla__container {
    backface-visibility: hidden;
    display: flex;
    touch-action: pan-y pinch-zoom;
    margin-left: calc(var(--slide-spacing) * -1);
  }

  .embla__slide {
    flex: 0 0 var(--slide-size);
    min-width: 0;
    padding-left: var(--slide-spacing);
  }

  /* SM BREAKPOINT */
  @media (min-width: 640px) {
    .embla__slide {
      flex: 0 0 var(--slide-size-md);
    }
  }

  /* MD BREAKPOINT */

  @media (min-width: 768px) {
    .embla__slide {
      flex: 0 0 var(--slide-size-lg);
    }
  }

  /* XL BREAKPOINT */
  @media (min-width: 1280px) {
    .embla__slide {
      flex: 0 0 var(--slide-size-2xl);
    }
  }
</style>
<script>
  import EmblaCarousel from "embla-carousel";
  import { WheelGesturesPlugin } from "embla-carousel-wheel-gestures";

  const rootNode = document.querySelector(".embla")!;
  const viewportNode = rootNode.querySelector<HTMLElement>(".embla__viewport")!;

  EmblaCarousel(
    viewportNode,
    {
      align: "center",
      loop: true,
      skipSnaps: true,
    },
    [
      WheelGesturesPlugin({
        target: document.body,
        forceWheelAxis: "y",
      }),
    ],
  );
</script>
